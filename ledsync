import os

async def get_keyboard_state(client):
    """Retrieve the keyboard RGB color from OpenRGB, and brightness from the system."""
    try:
        keyboard_device = next((device for device in client.devices if "Keyboard" in device.name), None)

        if not keyboard_device:
            print("\n⚠️ Keyboard device not found!")
            return None

        keyboard_device.update()  # Refresh keyboard state

        color = keyboard_device.colors[0]  # Get current RGB color

        # Try to read brightness from the system (Linux only)
        brightness = 3  # Default to max brightness
        brightness_path = "/sys/class/leds/asus::kbd_backlight/brightness"

        if os.path.exists(brightness_path):
            try:
                with open(brightness_path, "r") as f:
                    brightness = int(f.read().strip())  # Read brightness value
            except Exception as e:
                print(f"\n⚠️ Failed to read system brightness: {e}")

        # Map brightness (0-3) to (0-1.0) scale for RGB dimming
        brightness_scale = BRIGHTNESS_MAP.get(brightness, 255) / 255.0

        # Adjust RGB values based on brightness
        r = int(color.red * brightness_scale)
        g = int(color.green * brightness_scale)
        b = int(color.blue * brightness_scale)

        return (r, g, b, brightness)

    except Exception as e:
        print(f"\n⚠️ Error retrieving keyboard state: {e}")
        return None
